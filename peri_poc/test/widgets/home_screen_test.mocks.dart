// Mocks generated by Mockito 5.4.6 from annotations
// in peri_poc/test/widgets/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:peri_poc/core/utils/result.dart' as _i2;
import 'package:peri_poc/interfaces/i_storage_service.dart' as _i5;
import 'package:peri_poc/models/habit_completion.dart' as _i8;
import 'package:peri_poc/models/streak_data.dart' as _i9;
import 'package:peri_poc/models/user_data.dart' as _i7;
import 'package:peri_poc/services/voice_interaction_coordinator.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [VoiceInteractionCoordinator].
///
/// See the documentation for Mockito's code generation for more information.
class MockVoiceInteractionCoordinator extends _i1.Mock
    implements _i3.VoiceInteractionCoordinator {
  @override
  _i3.VoiceInteractionState get currentState =>
      (super.noSuchMethod(
            Invocation.getter(#currentState),
            returnValue: _i3.VoiceInteractionState.idle,
            returnValueForMissingStub: _i3.VoiceInteractionState.idle,
          )
          as _i3.VoiceInteractionState);

  @override
  _i4.Future<_i2.Result<void>> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#initialize, [])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#initialize, [])),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> startInteraction() =>
      (super.noSuchMethod(
            Invocation.method(#startInteraction, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#startInteraction, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#startInteraction, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> stopInteraction() =>
      (super.noSuchMethod(
            Invocation.method(#stopInteraction, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#stopInteraction, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#stopInteraction, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  void setOnStateChangedCallback(
    void Function(_i3.VoiceInteractionState)? callback,
  ) => super.noSuchMethod(
    Invocation.method(#setOnStateChangedCallback, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setOnInteractionResultCallback(void Function(String)? callback) =>
      super.noSuchMethod(
        Invocation.method(#setOnInteractionResultCallback, [callback]),
        returnValueForMissingStub: null,
      );

  @override
  void setOnErrorCallback(void Function(String)? callback) =>
      super.noSuchMethod(
        Invocation.method(#setOnErrorCallback, [callback]),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getCurrentSessionInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentSessionInfo, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  List<_i3.VoiceInteractionEvent> getSessionEvents() =>
      (super.noSuchMethod(
            Invocation.method(#getSessionEvents, []),
            returnValue: <_i3.VoiceInteractionEvent>[],
            returnValueForMissingStub: <_i3.VoiceInteractionEvent>[],
          )
          as List<_i3.VoiceInteractionEvent>);

  @override
  _i4.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [IStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIStorageService extends _i1.Mock implements _i5.IStorageService {
  @override
  _i4.Future<_i2.Result<void>> initialize({
    _i6.Directory Function(String)? directoryFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#initialize, [], {
              #directoryFactory: directoryFactory,
            }),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#initialize, [], {
                  #directoryFactory: directoryFactory,
                }),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#initialize, [], {
                  #directoryFactory: directoryFactory,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> saveUserData(_i7.UserData? userData) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserData, [userData]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveUserData, [userData]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#saveUserData, [userData]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i7.UserData>> getUserData() =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, []),
            returnValue: _i4.Future<_i2.Result<_i7.UserData>>.value(
              _FakeResult_0<_i7.UserData>(
                this,
                Invocation.method(#getUserData, []),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.Result<_i7.UserData>>.value(
                  _FakeResult_0<_i7.UserData>(
                    this,
                    Invocation.method(#getUserData, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Result<_i7.UserData>>);

  @override
  _i4.Future<_i2.Result<void>> saveHabitCompletion(
    _i8.HabitCompletion? completion, {
    _i6.File Function(String)? fileFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #saveHabitCompletion,
              [completion],
              {#fileFactory: fileFactory},
            ),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(
                  #saveHabitCompletion,
                  [completion],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(
                  #saveHabitCompletion,
                  [completion],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<List<_i8.HabitCompletion>>> getHabitCompletions({
    required DateTime? startDate,
    required DateTime? endDate,
    String? habitId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHabitCompletions, [], {
              #startDate: startDate,
              #endDate: endDate,
              #habitId: habitId,
            }),
            returnValue:
                _i4.Future<_i2.Result<List<_i8.HabitCompletion>>>.value(
                  _FakeResult_0<List<_i8.HabitCompletion>>(
                    this,
                    Invocation.method(#getHabitCompletions, [], {
                      #startDate: startDate,
                      #endDate: endDate,
                      #habitId: habitId,
                    }),
                  ),
                ),
            returnValueForMissingStub:
                _i4.Future<_i2.Result<List<_i8.HabitCompletion>>>.value(
                  _FakeResult_0<List<_i8.HabitCompletion>>(
                    this,
                    Invocation.method(#getHabitCompletions, [], {
                      #startDate: startDate,
                      #endDate: endDate,
                      #habitId: habitId,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Result<List<_i8.HabitCompletion>>>);

  @override
  _i4.Future<_i2.Result<_i9.StreakData>> getStreakData(
    String? habitId, {
    _i6.File Function(String)? fileFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getStreakData,
              [habitId],
              {#fileFactory: fileFactory},
            ),
            returnValue: _i4.Future<_i2.Result<_i9.StreakData>>.value(
              _FakeResult_0<_i9.StreakData>(
                this,
                Invocation.method(
                  #getStreakData,
                  [habitId],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
            returnValueForMissingStub:
                _i4.Future<_i2.Result<_i9.StreakData>>.value(
                  _FakeResult_0<_i9.StreakData>(
                    this,
                    Invocation.method(
                      #getStreakData,
                      [habitId],
                      {#fileFactory: fileFactory},
                    ),
                  ),
                ),
          )
          as _i4.Future<_i2.Result<_i9.StreakData>>);

  @override
  _i4.Future<_i2.Result<void>> updateStreakData(
    _i9.StreakData? streakData, {
    _i6.File Function(String)? fileFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateStreakData,
              [streakData],
              {#fileFactory: fileFactory},
            ),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(
                  #updateStreakData,
                  [streakData],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(
                  #updateStreakData,
                  [streakData],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<int>> calculateCurrentStreak(
    String? habitId, {
    _i6.File Function(String)? fileFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #calculateCurrentStreak,
              [habitId],
              {#fileFactory: fileFactory},
            ),
            returnValue: _i4.Future<_i2.Result<int>>.value(
              _FakeResult_0<int>(
                this,
                Invocation.method(
                  #calculateCurrentStreak,
                  [habitId],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<int>>.value(
              _FakeResult_0<int>(
                this,
                Invocation.method(
                  #calculateCurrentStreak,
                  [habitId],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<int>>);

  @override
  _i4.Future<_i2.Result<int>> calculateLongestStreak(
    String? habitId, {
    _i6.File Function(String)? fileFactory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #calculateLongestStreak,
              [habitId],
              {#fileFactory: fileFactory},
            ),
            returnValue: _i4.Future<_i2.Result<int>>.value(
              _FakeResult_0<int>(
                this,
                Invocation.method(
                  #calculateLongestStreak,
                  [habitId],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<int>>.value(
              _FakeResult_0<int>(
                this,
                Invocation.method(
                  #calculateLongestStreak,
                  [habitId],
                  {#fileFactory: fileFactory},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.Result<int>>);

  @override
  _i4.Future<_i2.Result<void>> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#clearAllData, [])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(this, Invocation.method(#clearAllData, [])),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<String>> exportDataAsJson() =>
      (super.noSuchMethod(
            Invocation.method(#exportDataAsJson, []),
            returnValue: _i4.Future<_i2.Result<String>>.value(
              _FakeResult_0<String>(
                this,
                Invocation.method(#exportDataAsJson, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<String>>.value(
              _FakeResult_0<String>(
                this,
                Invocation.method(#exportDataAsJson, []),
              ),
            ),
          )
          as _i4.Future<_i2.Result<String>>);

  @override
  _i4.Future<_i2.Result<void>> importDataFromJson(String? jsonData) =>
      (super.noSuchMethod(
            Invocation.method(#importDataFromJson, [jsonData]),
            returnValue: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#importDataFromJson, [jsonData]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Result<void>>.value(
              _FakeResult_0<void>(
                this,
                Invocation.method(#importDataFromJson, [jsonData]),
              ),
            ),
          )
          as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
